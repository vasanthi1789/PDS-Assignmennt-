# Converting  'Mileage' column to string to remove from the table
df['Mileage'] = df['Mileage'].astype(str)

# Remove "kmpl" from the 'Mileage' column
df['Mileage'] = df['Mileage'].str.replace(' kmpl', '')

# Handle missing or empty values by converting them to NaN
df['Mileage'] = df['Mileage'].replace('', None)


# Remove non-numeric characters from 'Mileage'
df['Mileage'] = df['Mileage'].str.replace(' km/kg', '', regex=True)

# Convert to float
df['Mileage'] = df['Mileage'].astype(float)
print (df)

df['Engine'] = df['Engine'].astype(str)
df['Engine'] = df['Engine'].str.replace(' CC', '').astype(float)


print(df)

df['Power'] = df['Power'].astype(str)
df['Power'] = df['Power'].str.replace(' bhp', '', regex=True)
df['Power'] = df['Power'].str.replace('null', '0', regex=True).astype(float)
print(df)


# Convert the 'New_Price' column to a string type
df['New_Price'] = df['New_Price'].astype(str)

# Now, you can use the .str accessor for string operations
df['New_Price'] = df['New_Price'].str.replace('Lakh', '').str.replace('Cr', '', regex=True)

# Handle empty strings by converting them to 0
df['New_Price'] = df['New_Price'].replace('', '0')

# Now, the 'New_Price' column should be processed correctly
print(df)

df.to_csv("Modified_data.csv", index=False)